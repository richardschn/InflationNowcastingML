Harnessing Machine Learning for Real-Time Inflation Nowcasting
Authors: Richard Schnorrenberger, Aishameriane Schmidt, Guilherme Valle Moura
Last update: December 2024

This repository contains the R codes for the implementation of the unrestricted mixed-frequency ML models and nowcasting results reported in the paper.

######################################################################################################################
Step 1. Implementing the nowcasting models: Main.R
######################################################################################################################

    • The “Main.R” file defines the specification of the general prediction model and sequentially runs the selected ML methods. 
        ◦ The model specification comprises a series of dummies that can be used to automatically switch on/off a specific feature of the general prediction model. For instance, 'focusFlag' adds survey expectations as a predictor variable while 'seasFlag' adds monthly seasonal dummies. Note that not all dummies are active for both classes of ML methods — for example, 'CVtreeFlag' will activate cross validation only for tree-based methods.
        ◦ The selected ML methods specified in the variable ‘models’ will be sequentially estimated using the auxiliary R-functions stored in the directory '/Models'.
        ◦ The position of the model one wishes to estimate can be modified using 'runModel'. In case you wish to add other ML methods or benchmark models, please make sure that the model name is compatible across “Main.R” and '/Models'.
        ◦ The “Loading.R” file loads the real-time dataset, transforms the data and prepares the mixed-frequency framework for the nowcasting exercise.
        ◦ For each model, if the dummy 'saveFlag' is active, the results will be saved in the directory 'Results/modelName', where modelName must be exactly equal to the corresponding string defined in the variable 'models' in “Main.R”.
        ◦ 
    • The results are saved as xlsx files within the corresponding directory 'Results/modelName' and consist of the following separate files:
        ◦ Model predictions for each nowcast horizon (day within the reporting month) throughout the evaluation period, observed inflation values, and the benchmark SPF expectations.
        ◦ RMSE and MAE performance metrics for each nowcast horizon.
        ◦ For shrinkage-based methods: cross-validation parameters and the estimated coefficients at each nowcasting round.
        ◦ For each of the above files, the model specification dummies are also saved in a separate sheet. 
        ◦ 

######################################################################################################################
Step 2. Reproducing tables and figures
######################################################################################################################

    • RMSE results: Table 3 and Table B1.
        ◦ After running the nowcasting models in Step 1, save the xlsx file of nowcast errors for each model in the directory '/Plots/data/results' using the label 'results_ModelName.xlsx'.
        ◦ Execute the file “RMSE_tables.R” from the directory 'Support code'. The script creates a new file in '/Plots/data/results' with the absolute RMSE and two other tables that include the relative RMSE compared to the median SPF and the Top5 SPF. It automatically performs a unilateral DM test and includes information on statistical significance (star codes) to the tables.
        ◦ 
    • Loss differentials, variable relevance and robustness checks: Figure 3, Figure B1, Figure 4, Figure 5, Figure B3, Figure B4.
        ◦ These figures are automatically generated by the Matlab script '/Plots/Main_Plots', which executes the m-files in '/Plots/functions'. Remarks: (i) these m-files require the current xlsx files (or new results in similar format) in '/Plots/data', (ii) the figures are automatically saved in '/Plots/figures'.

    • Fluctuation test: Figure B2.
        ◦ Execute the file “fluctuation_testing.R” from the directory 'Support code'.
        ◦ The figures are automatically saved in '/Plots/figures'.

